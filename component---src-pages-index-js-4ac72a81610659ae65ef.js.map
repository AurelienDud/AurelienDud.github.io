{"version":3,"sources":["webpack://aureliendud-website/./src/components/articlePreview.js","webpack://aureliendud-website/./src/components/postsList.js","webpack://aureliendud-website/./src/pages/index.js","webpack://aureliendud-website/./src/services/formaters.js"],"names":["ArticlePreview","title","cover","excerpt","link","skeletonMode","CardCover","CardCoverAttrs","className","alt","S","src","G","image","getImage","CardTitle","width","height","duration","CardText","count","CardLink","href","defaultProps","posts","map","post","index","key","formatBlogData","length","introEffectSize","introStyles","css","avatarStyles","moveGradient","keyframes","introDecoSize","introDecoWeight","introDecoStyles","data","allMdx","nodes","cx","contents","introTitle","introText","frontmatter","date","category","childImageSharp","fields","slug","body"],"mappings":"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","file":"component---src-pages-index-js-4ac72a81610659ae65ef.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticImage, GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport Skeleton from \"react-loading-skeleton\";\n\n/**\n * Settings\n */\nconst skeletonDuration = 5;\n\n/**\n * View\n * @param {object} props\n */\nfunction ArticlePreview({ title, cover, excerpt, link, skeletonMode }) {\n  // card image\n  const CardCover = () => {\n    const CardCoverAttrs = {\n      className: \"card-img-top image-cover ratio-cinema\",\n      alt: \"\",\n    };\n    if (skeletonMode)\n      return (\n        <StaticImage\n          src=\"../assets/images/default_soon.png\"\n          {...CardCoverAttrs}\n        />\n      );\n    if (!cover)\n      return (\n        <StaticImage src=\"../assets/images/default.png\" {...CardCoverAttrs} />\n      );\n    return <GatsbyImage image={getImage(cover)} {...CardCoverAttrs} />;\n  };\n\n  // card title\n  const CardTitle = () => {\n    if (!title && !skeletonMode) return <></>;\n    return (\n      <h3 className=\"h5 card-title\">\n        {skeletonMode ? (\n          <Skeleton width=\"8em\" height=\"1em\" duration={skeletonDuration} />\n        ) : (\n          title\n        )}\n      </h3>\n    );\n  };\n\n  // card body\n  const CardText = () => {\n    if (!excerpt && !skeletonMode) return <></>;\n    return (\n      <div className=\"card-text\">\n        {skeletonMode ? (\n          <Skeleton count={5} duration={skeletonDuration} />\n        ) : (\n          excerpt\n        )}\n      </div>\n    );\n  };\n\n  // card link\n  const CardLink = () => {\n    if (!link && !skeletonMode) return <></>;\n    return (\n      <>\n        {skeletonMode ? (\n          <Skeleton width=\"6em\" height=\"1em\" duration={skeletonDuration} />\n        ) : (\n          <a href={link} className=\"stretched-link text-muted\">\n            Lire l'article\n          </a>\n        )}\n      </>\n    );\n  };\n\n  // render\n  return (\n    <div className=\"card h-100\">\n      <CardCover />\n      <div className=\"card-body\">\n        <CardTitle />\n        <CardText />\n      </div>\n      <div className=\"card-footer text-center\">\n        <CardLink />\n      </div>\n    </div>\n  );\n}\n\nArticlePreview.propTypes = {\n  cover: PropTypes.object,\n  title: PropTypes.string,\n  excerpt: PropTypes.string,\n  link: PropTypes.string,\n  skeletonMode: PropTypes.bool,\n};\n\nArticlePreview.defaultProps = {\n  cover: null,\n  title: null,\n  excerpt: null,\n  link: null,\n  skeletonMode: false,\n};\n\nexport default ArticlePreview;\n","import React from \"react\";\nimport ArticlePreview from \"./articlePreview\";\nimport { formatBlogData } from \"../services/formaters\";\n\nconst minPostCount = 3;\n\nfunction PostsList({ posts }) {\n  return (\n    <div className=\"row\">\n      {posts.map((post, index) => (\n        <div className=\"col-12 col-md-6 col-lg-4 pb-4\" key={index}>\n          <ArticlePreview {...formatBlogData(post)} />\n        </div>\n      ))}\n      {/*\n        display fake content to fill the space and tease future publications\n        but hide when necessary to keep a good UX on mobile\n      */}\n      {posts.length + 1 <= minPostCount && (\n        <div className=\"col-12 col-md-6 col-lg-4 pb-4 d-none d-md-block\">\n          <ArticlePreview skeletonMode />\n        </div>\n      )}\n      {posts.length + 2 <= minPostCount && (\n        <div className=\"col-12 col-md-6 col-lg-4 pb-4 d-none d-lg-block\">\n          <ArticlePreview skeletonMode />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default PostsList;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { cx, css, keyframes } from \"@emotion/css\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport Layout from \"../templates/layout-page\";\nimport PostsList from \"../components/postsList\";\nimport contents from \"../contents/chunks\";\n\n/**\n * Query all posts\n */\nexport const query = graphql`\n  query indexQuery {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: ASC }\n      filter: { fields: { group: { eq: \"blog\" } } }\n      limit: 6\n    ) {\n      nodes {\n        frontmatter {\n          title\n          date\n          category\n          cover {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n          }\n        }\n        fields {\n          slug\n          group\n        }\n        excerpt\n      }\n    }\n  }\n`;\n\n/**\n * Styles\n */\nconst introEffectSize = \"2.5vmax\";\nconst introStyles = css`\n  position: relative;\n  &:before {\n    content: \"\";\n    position: absolute;\n    z-index: 1;\n    top: 0;\n    right: 0;\n    width: 100%;\n    border-top: solid ${introEffectSize} var(--primary);\n    border-left: solid 50vw var(--primary);\n    border-right: solid 50vw transparent;\n    border-bottom: solid ${introEffectSize} transparent;\n  }\n`;\n\nconst avatarStyles = css`\n  position: relative;\n  z-index: 5;\n  border: solid 10px var(--white);\n`;\n\nconst moveGradient = keyframes`\n  50% {\n    background-position: 100% 50%;\n  }\n`;\nconst introDecoSize = \"48px\";\nconst introDecoWeight = \"12px\";\nconst introDecoStyles = css`\n  position: relative;\n  background: var(--body);\n  &:after {\n    content: \"\";\n    position: absolute;\n    z-index: -2;\n    width: ${introDecoSize};\n    height: ${introDecoSize};\n    right: -${introDecoWeight};\n    bottom: -${introDecoWeight};\n    background: linear-gradient(\n      60deg,\n      var(--secondary),\n      #7662f5,\n      #9785ff,\n      #ad9eff,\n      #9785ff,\n      #7662f5,\n      var(--secondary)\n    );\n    background-size: 300% 300%;\n    background-position: 0 50%;\n    animation: ${moveGradient} 20s alternate infinite;\n  }\n`;\n\n/**\n * View\n */\nconst IndexPage = ({ data }) => {\n  const posts = data?.allMdx?.nodes || null;\n\n  return (\n    <Layout>\n      {/* intro */}\n      <div className={cx(\"mb-4 mb-md-5 pt-md-3\", introStyles)}>\n        <div className=\"container\">\n          <div className=\"row align-items-start justify-content-between\">\n            <div className=\"col-8 offset-2 col-md-4 offset-md-0\">\n              <StaticImage\n                src=\"../assets/images/avatar.jpg\"\n                alt=\"\"\n                className={cx(\"img-fluid rounded-circle\", avatarStyles)}\n              />\n            </div>\n            <div className=\"col-12 col-sm\">\n              <div className={cx(\"pt-2 pt-md-5 pb-2\", introDecoStyles)}>\n                <h1 className=\"h1 mb-3 text-center text-sm-left\">\n                  {contents?.home?.introTitle}\n                </h1>\n                <p>{contents?.home?.introText}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* blog   */}\n      {posts && posts.length > 0 && (\n        <div className=\"container my-3 my-md-4\">\n          <h2 className=\"mb-3\">{contents?.blog?.title}</h2>\n          <PostsList posts={posts} />\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","/**\n * Format data from graphQL into a friendly flat object\n * @param {object} data from graphQL\n */\nexport function formatBlogData(data) {\n  return {\n    title: data?.frontmatter?.title || null,\n    date: data?.frontmatter?.date || null,\n    category: data?.frontmatter?.category || null,\n    cover: data?.frontmatter?.cover?.childImageSharp || null,\n    excerpt: data.excerpt || null,\n    link: data?.fields?.slug || null,\n    body: data.body || null,\n  };\n}\n"],"sourceRoot":""}